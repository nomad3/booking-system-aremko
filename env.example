# Configuración Aremko Booking System

# Django
SECRET_KEY=tu_clave_secreta_super_segura_aqui
DEBUG=False
ALLOWED_HOSTS=tu-dominio.onrender.com,.onrender.com,localhost,127.0.0.1
ENVIRONMENT=production

# Base de Datos
DATABASE_URL=postgresql://usuario:password@host:puerto/nombre_db

# Email
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_HOST_USER=tu-email@gmail.com
EMAIL_HOST_PASSWORD=tu-password-de-aplicacion
DEFAULT_FROM_EMAIL=comunicaciones@aremko.cl

# Google Cloud Storage
GOOGLE_APPLICATION_CREDENTIALS=/etc/secrets/google-cloud-key.json
GS_BUCKET_NAME=tu-bucket-name
GS_PROJECT_ID=tu-project-id

# Django Superuser (para creación automática)
DJANGO_SUPERUSER_USERNAME=admin
DJANGO_SUPERUSER_EMAIL=admin@aremko.cl
DJANGO_SUPERUSER_PASSWORD=tu-password-admin

# Redvoiss SMS API
REDVOISS_API_URL=https://sms.lanube.cl/services/rest
REDVOISS_USERNAME=tu-usuario-redvoiss
REDVOISS_PASSWORD=tu-password-redvoiss

# Límites Anti-Spam Comunicación
SMS_DAILY_LIMIT_PER_CLIENT=2
SMS_MONTHLY_LIMIT_PER_CLIENT=8
EMAIL_WEEKLY_LIMIT_PER_CLIENT=1
EMAIL_MONTHLY_LIMIT_PER_CLIENT=4

# Render
PORT=8000

# OpenAI API (opcional para funciones futuras)
OPENAI_API_KEY=tu-openai-api-key

# --- NOTAS DE CONFIGURACIÓN ---

# REDVOISS:
# - Crear cuenta en https://redvoiss.net
# - Obtener credenciales de usuario y contraseña
# - Precio: $12 CLP por SMS (según cotización)
# - 5000 SMS mensuales = $60,000 CLP/mes

# EMAIL:
# - Configurar autenticación de 2 factores en Gmail
# - Generar "Contraseña de aplicación" específica
# - Usar esa contraseña en EMAIL_HOST_PASSWORD

# LÍMITES ANTI-SPAM:
# - SMS_DAILY_LIMIT_PER_CLIENT: Máximo SMS por cliente por día
# - SMS_MONTHLY_LIMIT_PER_CLIENT: Máximo SMS por cliente por mes  
# - EMAIL_WEEKLY_LIMIT_PER_CLIENT: Máximo emails por cliente por semana
# - EMAIL_MONTHLY_LIMIT_PER_CLIENT: Máximo emails por cliente por mes

# EJEMPLO DE CONFIGURACIÓN RENDER:
# 1. Crear nuevo Web Service
# 2. Conectar repositorio GitHub
# 3. Configurar variables de entorno en Render Dashboard
# 4. Subir google-cloud-key.json como "Secret File"
# 5. Deploy automático